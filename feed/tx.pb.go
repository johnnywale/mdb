// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tx.proto

package feed

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TransactionType_Type int32

const (
	TransactionType_UNKNOWN TransactionType_Type = 0
	TransactionType_CREDIT  TransactionType_Type = 1
	TransactionType_DEBIT   TransactionType_Type = 2
)

var TransactionType_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "CREDIT",
	2: "DEBIT",
}
var TransactionType_Type_value = map[string]int32{
	"UNKNOWN": 0,
	"CREDIT":  1,
	"DEBIT":   2,
}

func (x TransactionType_Type) String() string {
	return proto.EnumName(TransactionType_Type_name, int32(x))
}
func (TransactionType_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tx_217d9914314969a7, []int{1, 0}
}

type TransactionCategory_Category int32

const (
	TransactionCategory_UNKNOWN    TransactionCategory_Category = 0
	TransactionCategory_WAGER      TransactionCategory_Category = 1
	TransactionCategory_PAYOUT     TransactionCategory_Category = 2
	TransactionCategory_REFUND     TransactionCategory_Category = 3
	TransactionCategory_LOYALTY    TransactionCategory_Category = 4
	TransactionCategory_COMMISSION TransactionCategory_Category = 5
	TransactionCategory_TRANSFER   TransactionCategory_Category = 6
	TransactionCategory_SETTLEMENT TransactionCategory_Category = 7
	TransactionCategory_DEPOSIT    TransactionCategory_Category = 8
	TransactionCategory_WITHDRAWAL TransactionCategory_Category = 9
	TransactionCategory_ADJUSTMENT TransactionCategory_Category = 10
	TransactionCategory_BUY        TransactionCategory_Category = 11
	TransactionCategory_SELL       TransactionCategory_Category = 12
	TransactionCategory_ENDROUND   TransactionCategory_Category = 13
)

var TransactionCategory_Category_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "WAGER",
	2:  "PAYOUT",
	3:  "REFUND",
	4:  "LOYALTY",
	5:  "COMMISSION",
	6:  "TRANSFER",
	7:  "SETTLEMENT",
	8:  "DEPOSIT",
	9:  "WITHDRAWAL",
	10: "ADJUSTMENT",
	11: "BUY",
	12: "SELL",
	13: "ENDROUND",
}
var TransactionCategory_Category_value = map[string]int32{
	"UNKNOWN":    0,
	"WAGER":      1,
	"PAYOUT":     2,
	"REFUND":     3,
	"LOYALTY":    4,
	"COMMISSION": 5,
	"TRANSFER":   6,
	"SETTLEMENT": 7,
	"DEPOSIT":    8,
	"WITHDRAWAL": 9,
	"ADJUSTMENT": 10,
	"BUY":        11,
	"SELL":       12,
	"ENDROUND":   13,
}

func (x TransactionCategory_Category) String() string {
	return proto.EnumName(TransactionCategory_Category_name, int32(x))
}
func (TransactionCategory_Category) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tx_217d9914314969a7, []int{2, 0}
}

type OperatingSystem_Os int32

const (
	OperatingSystem_UNKNOWN OperatingSystem_Os = 0
	OperatingSystem_WIN     OperatingSystem_Os = 1
	OperatingSystem_IOS     OperatingSystem_Os = 2
	OperatingSystem_ANDROID OperatingSystem_Os = 3
	OperatingSystem_LINUX   OperatingSystem_Os = 4
	OperatingSystem_OSX     OperatingSystem_Os = 5
	OperatingSystem_BSD     OperatingSystem_Os = 6
)

var OperatingSystem_Os_name = map[int32]string{
	0: "UNKNOWN",
	1: "WIN",
	2: "IOS",
	3: "ANDROID",
	4: "LINUX",
	5: "OSX",
	6: "BSD",
}
var OperatingSystem_Os_value = map[string]int32{
	"UNKNOWN": 0,
	"WIN":     1,
	"IOS":     2,
	"ANDROID": 3,
	"LINUX":   4,
	"OSX":     5,
	"BSD":     6,
}

func (x OperatingSystem_Os) String() string {
	return proto.EnumName(OperatingSystem_Os_name, int32(x))
}
func (OperatingSystem_Os) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tx_217d9914314969a7, []int{3, 0}
}

type Platform_Type int32

const (
	Platform_UNKNOWN Platform_Type = 0
	Platform_HTML5   Platform_Type = 1
	Platform_FLASH   Platform_Type = 2
	Platform_NATIVE  Platform_Type = 3
)

var Platform_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "HTML5",
	2: "FLASH",
	3: "NATIVE",
}
var Platform_Type_value = map[string]int32{
	"UNKNOWN": 0,
	"HTML5":   1,
	"FLASH":   2,
	"NATIVE":  3,
}

func (x Platform_Type) String() string {
	return proto.EnumName(Platform_Type_name, int32(x))
}
func (Platform_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tx_217d9914314969a7, []int{4, 0}
}

type DeviceType_Type int32

const (
	DeviceType_UNKNOWN DeviceType_Type = 0
	DeviceType_MOBILE  DeviceType_Type = 1
	DeviceType_TABLET  DeviceType_Type = 2
	DeviceType_DESKTOP DeviceType_Type = 3
	DeviceType_TV      DeviceType_Type = 4
)

var DeviceType_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "MOBILE",
	2: "TABLET",
	3: "DESKTOP",
	4: "TV",
}
var DeviceType_Type_value = map[string]int32{
	"UNKNOWN": 0,
	"MOBILE":  1,
	"TABLET":  2,
	"DESKTOP": 3,
	"TV":      4,
}

func (x DeviceType_Type) String() string {
	return proto.EnumName(DeviceType_Type_name, int32(x))
}
func (DeviceType_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tx_217d9914314969a7, []int{5, 0}
}

type Browser_Type int32

const (
	Browser_UNKNOWN           Browser_Type = 0
	Browser_FIREFOX           Browser_Type = 1
	Browser_CHROME            Browser_Type = 2
	Browser_CHROME_MOBILE     Browser_Type = 3
	Browser_SAFARI            Browser_Type = 4
	Browser_SAFARI_MOBILE     Browser_Type = 5
	Browser_IE                Browser_Type = 6
	Browser_EDGE              Browser_Type = 7
	Browser_ANDROID_NATIVE    Browser_Type = 8
	Browser_QQ_BROWSER        Browser_Type = 9
	Browser_NONE              Browser_Type = 10
	Browser_QQ_BROWSER_MOBILE Browser_Type = 11
	Browser_UC_BROWSER        Browser_Type = 12
)

var Browser_Type_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "FIREFOX",
	2:  "CHROME",
	3:  "CHROME_MOBILE",
	4:  "SAFARI",
	5:  "SAFARI_MOBILE",
	6:  "IE",
	7:  "EDGE",
	8:  "ANDROID_NATIVE",
	9:  "QQ_BROWSER",
	10: "NONE",
	11: "QQ_BROWSER_MOBILE",
	12: "UC_BROWSER",
}
var Browser_Type_value = map[string]int32{
	"UNKNOWN":           0,
	"FIREFOX":           1,
	"CHROME":            2,
	"CHROME_MOBILE":     3,
	"SAFARI":            4,
	"SAFARI_MOBILE":     5,
	"IE":                6,
	"EDGE":              7,
	"ANDROID_NATIVE":    8,
	"QQ_BROWSER":        9,
	"NONE":              10,
	"QQ_BROWSER_MOBILE": 11,
	"UC_BROWSER":        12,
}

func (x Browser_Type) String() string {
	return proto.EnumName(Browser_Type_name, int32(x))
}
func (Browser_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tx_217d9914314969a7, []int{6, 0}
}

type BalanceType_Type int32

const (
	BalanceType_UNKNOWN        BalanceType_Type = 0
	BalanceType_CREDIT_BALANCE BalanceType_Type = 1
	BalanceType_CASH_BALANCE   BalanceType_Type = 2
)

var BalanceType_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "CREDIT_BALANCE",
	2: "CASH_BALANCE",
}
var BalanceType_Type_value = map[string]int32{
	"UNKNOWN":        0,
	"CREDIT_BALANCE": 1,
	"CASH_BALANCE":   2,
}

func (x BalanceType_Type) String() string {
	return proto.EnumName(BalanceType_Type_name, int32(x))
}
func (BalanceType_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_tx_217d9914314969a7, []int{7, 0}
}

type Request struct {
	Path                 []string `protobuf:"bytes,1,rep,name=path,proto3" json:"path,omitempty"`
	Protobuf             []byte   `protobuf:"bytes,2,opt,name=protobuf,proto3" json:"protobuf,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_tx_217d9914314969a7, []int{0}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (dst *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(dst, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetPath() []string {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *Request) GetProtobuf() []byte {
	if m != nil {
		return m.Protobuf
	}
	return nil
}

type TransactionType struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionType) Reset()         { *m = TransactionType{} }
func (m *TransactionType) String() string { return proto.CompactTextString(m) }
func (*TransactionType) ProtoMessage()    {}
func (*TransactionType) Descriptor() ([]byte, []int) {
	return fileDescriptor_tx_217d9914314969a7, []int{1}
}
func (m *TransactionType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionType.Unmarshal(m, b)
}
func (m *TransactionType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionType.Marshal(b, m, deterministic)
}
func (dst *TransactionType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionType.Merge(dst, src)
}
func (m *TransactionType) XXX_Size() int {
	return xxx_messageInfo_TransactionType.Size(m)
}
func (m *TransactionType) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionType.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionType proto.InternalMessageInfo

type TransactionCategory struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionCategory) Reset()         { *m = TransactionCategory{} }
func (m *TransactionCategory) String() string { return proto.CompactTextString(m) }
func (*TransactionCategory) ProtoMessage()    {}
func (*TransactionCategory) Descriptor() ([]byte, []int) {
	return fileDescriptor_tx_217d9914314969a7, []int{2}
}
func (m *TransactionCategory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionCategory.Unmarshal(m, b)
}
func (m *TransactionCategory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionCategory.Marshal(b, m, deterministic)
}
func (dst *TransactionCategory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionCategory.Merge(dst, src)
}
func (m *TransactionCategory) XXX_Size() int {
	return xxx_messageInfo_TransactionCategory.Size(m)
}
func (m *TransactionCategory) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionCategory.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionCategory proto.InternalMessageInfo

type OperatingSystem struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OperatingSystem) Reset()         { *m = OperatingSystem{} }
func (m *OperatingSystem) String() string { return proto.CompactTextString(m) }
func (*OperatingSystem) ProtoMessage()    {}
func (*OperatingSystem) Descriptor() ([]byte, []int) {
	return fileDescriptor_tx_217d9914314969a7, []int{3}
}
func (m *OperatingSystem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperatingSystem.Unmarshal(m, b)
}
func (m *OperatingSystem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperatingSystem.Marshal(b, m, deterministic)
}
func (dst *OperatingSystem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperatingSystem.Merge(dst, src)
}
func (m *OperatingSystem) XXX_Size() int {
	return xxx_messageInfo_OperatingSystem.Size(m)
}
func (m *OperatingSystem) XXX_DiscardUnknown() {
	xxx_messageInfo_OperatingSystem.DiscardUnknown(m)
}

var xxx_messageInfo_OperatingSystem proto.InternalMessageInfo

type Platform struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Platform) Reset()         { *m = Platform{} }
func (m *Platform) String() string { return proto.CompactTextString(m) }
func (*Platform) ProtoMessage()    {}
func (*Platform) Descriptor() ([]byte, []int) {
	return fileDescriptor_tx_217d9914314969a7, []int{4}
}
func (m *Platform) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Platform.Unmarshal(m, b)
}
func (m *Platform) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Platform.Marshal(b, m, deterministic)
}
func (dst *Platform) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Platform.Merge(dst, src)
}
func (m *Platform) XXX_Size() int {
	return xxx_messageInfo_Platform.Size(m)
}
func (m *Platform) XXX_DiscardUnknown() {
	xxx_messageInfo_Platform.DiscardUnknown(m)
}

var xxx_messageInfo_Platform proto.InternalMessageInfo

type DeviceType struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceType) Reset()         { *m = DeviceType{} }
func (m *DeviceType) String() string { return proto.CompactTextString(m) }
func (*DeviceType) ProtoMessage()    {}
func (*DeviceType) Descriptor() ([]byte, []int) {
	return fileDescriptor_tx_217d9914314969a7, []int{5}
}
func (m *DeviceType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceType.Unmarshal(m, b)
}
func (m *DeviceType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceType.Marshal(b, m, deterministic)
}
func (dst *DeviceType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceType.Merge(dst, src)
}
func (m *DeviceType) XXX_Size() int {
	return xxx_messageInfo_DeviceType.Size(m)
}
func (m *DeviceType) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceType.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceType proto.InternalMessageInfo

type Browser struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Browser) Reset()         { *m = Browser{} }
func (m *Browser) String() string { return proto.CompactTextString(m) }
func (*Browser) ProtoMessage()    {}
func (*Browser) Descriptor() ([]byte, []int) {
	return fileDescriptor_tx_217d9914314969a7, []int{6}
}
func (m *Browser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Browser.Unmarshal(m, b)
}
func (m *Browser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Browser.Marshal(b, m, deterministic)
}
func (dst *Browser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Browser.Merge(dst, src)
}
func (m *Browser) XXX_Size() int {
	return xxx_messageInfo_Browser.Size(m)
}
func (m *Browser) XXX_DiscardUnknown() {
	xxx_messageInfo_Browser.DiscardUnknown(m)
}

var xxx_messageInfo_Browser proto.InternalMessageInfo

type BalanceType struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BalanceType) Reset()         { *m = BalanceType{} }
func (m *BalanceType) String() string { return proto.CompactTextString(m) }
func (*BalanceType) ProtoMessage()    {}
func (*BalanceType) Descriptor() ([]byte, []int) {
	return fileDescriptor_tx_217d9914314969a7, []int{7}
}
func (m *BalanceType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BalanceType.Unmarshal(m, b)
}
func (m *BalanceType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BalanceType.Marshal(b, m, deterministic)
}
func (dst *BalanceType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BalanceType.Merge(dst, src)
}
func (m *BalanceType) XXX_Size() int {
	return xxx_messageInfo_BalanceType.Size(m)
}
func (m *BalanceType) XXX_DiscardUnknown() {
	xxx_messageInfo_BalanceType.DiscardUnknown(m)
}

var xxx_messageInfo_BalanceType proto.InternalMessageInfo

type Money struct {
	CurrencyUnit         string   `protobuf:"bytes,1,opt,name=currency_unit,json=currencyUnit,proto3" json:"currency_unit,omitempty"`
	Amount               int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Money) Reset()         { *m = Money{} }
func (m *Money) String() string { return proto.CompactTextString(m) }
func (*Money) ProtoMessage()    {}
func (*Money) Descriptor() ([]byte, []int) {
	return fileDescriptor_tx_217d9914314969a7, []int{8}
}
func (m *Money) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Money.Unmarshal(m, b)
}
func (m *Money) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Money.Marshal(b, m, deterministic)
}
func (dst *Money) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Money.Merge(dst, src)
}
func (m *Money) XXX_Size() int {
	return xxx_messageInfo_Money.Size(m)
}
func (m *Money) XXX_DiscardUnknown() {
	xxx_messageInfo_Money.DiscardUnknown(m)
}

var xxx_messageInfo_Money proto.InternalMessageInfo

func (m *Money) GetCurrencyUnit() string {
	if m != nil {
		return m.CurrencyUnit
	}
	return ""
}

func (m *Money) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type Transaction struct {
	Id                   int64                        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedBy            int64                        `protobuf:"varint,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Created              *timestamp.Timestamp         `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	TxId                 string                       `protobuf:"bytes,8,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	ApplicationId        int64                        `protobuf:"varint,9,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	ParentTransactionId  int64                        `protobuf:"varint,21,opt,name=parent_transaction_id,json=parentTransactionId,proto3" json:"parent_transaction_id,omitempty"`
	AccountId            int64                        `protobuf:"varint,22,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CompanyId            int64                        `protobuf:"varint,23,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	WalletId             int64                        `protobuf:"varint,24,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	WalletCode           string                       `protobuf:"bytes,25,opt,name=wallet_code,json=walletCode,proto3" json:"wallet_code,omitempty"`
	Category             TransactionCategory_Category `protobuf:"varint,26,opt,name=category,proto3,enum=feed.TransactionCategory_Category" json:"category,omitempty"`
	SubCategory          string                       `protobuf:"bytes,27,opt,name=sub_category,json=subCategory,proto3" json:"sub_category,omitempty"`
	BalanceType          BalanceType_Type             `protobuf:"varint,28,opt,name=balance_type,json=balanceType,proto3,enum=feed.BalanceType_Type" json:"balance_type,omitempty"`
	Type                 TransactionType_Type         `protobuf:"varint,29,opt,name=type,proto3,enum=feed.TransactionType_Type" json:"type,omitempty"`
	CurrencyUnit         string                       `protobuf:"bytes,30,opt,name=currency_unit,json=currencyUnit,proto3" json:"currency_unit,omitempty"`
	Amount               *Money                       `protobuf:"bytes,31,opt,name=amount,proto3" json:"amount,omitempty"`
	PoolAmount           *Money                       `protobuf:"bytes,32,opt,name=pool_amount,json=poolAmount,proto3" json:"pool_amount,omitempty"`
	TransactionTime      *timestamp.Timestamp         `protobuf:"bytes,33,opt,name=transaction_time,json=transactionTime,proto3" json:"transaction_time,omitempty"`
	MetaData             string                       `protobuf:"bytes,34,opt,name=meta_data,json=metaData,proto3" json:"meta_data,omitempty"`
	ExternalRef          string                       `protobuf:"bytes,35,opt,name=external_ref,json=externalRef,proto3" json:"external_ref,omitempty"`
	Balance              *Money                       `protobuf:"bytes,36,opt,name=balance,proto3" json:"balance,omitempty"`
	Session              string                       `protobuf:"bytes,37,opt,name=session,proto3" json:"session,omitempty"`
	Ip                   string                       `protobuf:"bytes,38,opt,name=ip,proto3" json:"ip,omitempty"`
	Path                 string                       `protobuf:"bytes,39,opt,name=path,proto3" json:"path,omitempty"`
	Test                 bool                         `protobuf:"varint,40,opt,name=test,proto3" json:"test,omitempty"`
	ExchangeRateBatchId  int64                        `protobuf:"varint,41,opt,name=exchange_rate_batch_id,json=exchangeRateBatchId,proto3" json:"exchange_rate_batch_id,omitempty"`
	LoginContextId       int64                        `protobuf:"varint,42,opt,name=login_context_id,json=loginContextId,proto3" json:"login_context_id,omitempty"`
	CampaignId           int64                        `protobuf:"varint,43,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	ReportIds            []int64                      `protobuf:"varint,50,rep,packed,name=report_ids,json=reportIds,proto3" json:"report_ids,omitempty"`
	AccountSeqIds        []int64                      `protobuf:"varint,51,rep,packed,name=account_seq_ids,json=accountSeqIds,proto3" json:"account_seq_ids,omitempty"`
	ItemId               int64                        `protobuf:"varint,52,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	VendorId             int64                        `protobuf:"varint,53,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	DeviceType           DeviceType_Type              `protobuf:"varint,54,opt,name=device_type,json=deviceType,proto3,enum=feed.DeviceType_Type" json:"device_type,omitempty"`
	DeviceTypeVersion    string                       `protobuf:"bytes,55,opt,name=device_type_version,json=deviceTypeVersion,proto3" json:"device_type_version,omitempty"`
	Os                   OperatingSystem_Os           `protobuf:"varint,56,opt,name=os,proto3,enum=feed.OperatingSystem_Os" json:"os,omitempty"`
	OsVersion            string                       `protobuf:"bytes,57,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	Platform             Platform_Type                `protobuf:"varint,58,opt,name=platform,proto3,enum=feed.Platform_Type" json:"platform,omitempty"`
	PlatformVer          string                       `protobuf:"bytes,59,opt,name=platform_ver,json=platformVer,proto3" json:"platform_ver,omitempty"`
	Browser              Browser_Type                 `protobuf:"varint,60,opt,name=browser,proto3,enum=feed.Browser_Type" json:"browser,omitempty"`
	BrowserVer           int32                        `protobuf:"varint,61,opt,name=browser_ver,json=browserVer,proto3" json:"browser_ver,omitempty"`
	CountryCode          string                       `protobuf:"bytes,62,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	CountryIpCode        string                       `protobuf:"bytes,63,opt,name=country_ip_code,json=countryIpCode,proto3" json:"country_ip_code,omitempty"`
	PromotionCode        string                       `protobuf:"bytes,64,opt,name=promotion_code,json=promotionCode,proto3" json:"promotion_code,omitempty"`
	RedirectTime         *timestamp.Timestamp         `protobuf:"bytes,65,opt,name=redirect_time,json=redirectTime,proto3" json:"redirect_time,omitempty"`
	LoginTime            *timestamp.Timestamp         `protobuf:"bytes,66,opt,name=login_time,json=loginTime,proto3" json:"login_time,omitempty"`
	RegionId             string                       `protobuf:"bytes,67,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	City                 string                       `protobuf:"bytes,68,opt,name=city,proto3" json:"city,omitempty"`
	Isp                  string                       `protobuf:"bytes,69,opt,name=isp,proto3" json:"isp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_tx_217d9914314969a7, []int{9}
}
func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (dst *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(dst, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Transaction) GetCreatedBy() int64 {
	if m != nil {
		return m.CreatedBy
	}
	return 0
}

func (m *Transaction) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Transaction) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *Transaction) GetApplicationId() int64 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

func (m *Transaction) GetParentTransactionId() int64 {
	if m != nil {
		return m.ParentTransactionId
	}
	return 0
}

func (m *Transaction) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *Transaction) GetCompanyId() int64 {
	if m != nil {
		return m.CompanyId
	}
	return 0
}

func (m *Transaction) GetWalletId() int64 {
	if m != nil {
		return m.WalletId
	}
	return 0
}

func (m *Transaction) GetWalletCode() string {
	if m != nil {
		return m.WalletCode
	}
	return ""
}

func (m *Transaction) GetCategory() TransactionCategory_Category {
	if m != nil {
		return m.Category
	}
	return TransactionCategory_UNKNOWN
}

func (m *Transaction) GetSubCategory() string {
	if m != nil {
		return m.SubCategory
	}
	return ""
}

func (m *Transaction) GetBalanceType() BalanceType_Type {
	if m != nil {
		return m.BalanceType
	}
	return BalanceType_UNKNOWN
}

func (m *Transaction) GetType() TransactionType_Type {
	if m != nil {
		return m.Type
	}
	return TransactionType_UNKNOWN
}

func (m *Transaction) GetCurrencyUnit() string {
	if m != nil {
		return m.CurrencyUnit
	}
	return ""
}

func (m *Transaction) GetAmount() *Money {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *Transaction) GetPoolAmount() *Money {
	if m != nil {
		return m.PoolAmount
	}
	return nil
}

func (m *Transaction) GetTransactionTime() *timestamp.Timestamp {
	if m != nil {
		return m.TransactionTime
	}
	return nil
}

func (m *Transaction) GetMetaData() string {
	if m != nil {
		return m.MetaData
	}
	return ""
}

func (m *Transaction) GetExternalRef() string {
	if m != nil {
		return m.ExternalRef
	}
	return ""
}

func (m *Transaction) GetBalance() *Money {
	if m != nil {
		return m.Balance
	}
	return nil
}

func (m *Transaction) GetSession() string {
	if m != nil {
		return m.Session
	}
	return ""
}

func (m *Transaction) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Transaction) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Transaction) GetTest() bool {
	if m != nil {
		return m.Test
	}
	return false
}

func (m *Transaction) GetExchangeRateBatchId() int64 {
	if m != nil {
		return m.ExchangeRateBatchId
	}
	return 0
}

func (m *Transaction) GetLoginContextId() int64 {
	if m != nil {
		return m.LoginContextId
	}
	return 0
}

func (m *Transaction) GetCampaignId() int64 {
	if m != nil {
		return m.CampaignId
	}
	return 0
}

func (m *Transaction) GetReportIds() []int64 {
	if m != nil {
		return m.ReportIds
	}
	return nil
}

func (m *Transaction) GetAccountSeqIds() []int64 {
	if m != nil {
		return m.AccountSeqIds
	}
	return nil
}

func (m *Transaction) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *Transaction) GetVendorId() int64 {
	if m != nil {
		return m.VendorId
	}
	return 0
}

func (m *Transaction) GetDeviceType() DeviceType_Type {
	if m != nil {
		return m.DeviceType
	}
	return DeviceType_UNKNOWN
}

func (m *Transaction) GetDeviceTypeVersion() string {
	if m != nil {
		return m.DeviceTypeVersion
	}
	return ""
}

func (m *Transaction) GetOs() OperatingSystem_Os {
	if m != nil {
		return m.Os
	}
	return OperatingSystem_UNKNOWN
}

func (m *Transaction) GetOsVersion() string {
	if m != nil {
		return m.OsVersion
	}
	return ""
}

func (m *Transaction) GetPlatform() Platform_Type {
	if m != nil {
		return m.Platform
	}
	return Platform_UNKNOWN
}

func (m *Transaction) GetPlatformVer() string {
	if m != nil {
		return m.PlatformVer
	}
	return ""
}

func (m *Transaction) GetBrowser() Browser_Type {
	if m != nil {
		return m.Browser
	}
	return Browser_UNKNOWN
}

func (m *Transaction) GetBrowserVer() int32 {
	if m != nil {
		return m.BrowserVer
	}
	return 0
}

func (m *Transaction) GetCountryCode() string {
	if m != nil {
		return m.CountryCode
	}
	return ""
}

func (m *Transaction) GetCountryIpCode() string {
	if m != nil {
		return m.CountryIpCode
	}
	return ""
}

func (m *Transaction) GetPromotionCode() string {
	if m != nil {
		return m.PromotionCode
	}
	return ""
}

func (m *Transaction) GetRedirectTime() *timestamp.Timestamp {
	if m != nil {
		return m.RedirectTime
	}
	return nil
}

func (m *Transaction) GetLoginTime() *timestamp.Timestamp {
	if m != nil {
		return m.LoginTime
	}
	return nil
}

func (m *Transaction) GetRegionId() string {
	if m != nil {
		return m.RegionId
	}
	return ""
}

func (m *Transaction) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Transaction) GetIsp() string {
	if m != nil {
		return m.Isp
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "feed.Request")
	proto.RegisterType((*TransactionType)(nil), "feed.TransactionType")
	proto.RegisterType((*TransactionCategory)(nil), "feed.TransactionCategory")
	proto.RegisterType((*OperatingSystem)(nil), "feed.OperatingSystem")
	proto.RegisterType((*Platform)(nil), "feed.Platform")
	proto.RegisterType((*DeviceType)(nil), "feed.DeviceType")
	proto.RegisterType((*Browser)(nil), "feed.Browser")
	proto.RegisterType((*BalanceType)(nil), "feed.BalanceType")
	proto.RegisterType((*Money)(nil), "feed.Money")
	proto.RegisterType((*Transaction)(nil), "feed.Transaction")
	proto.RegisterEnum("feed.TransactionType_Type", TransactionType_Type_name, TransactionType_Type_value)
	proto.RegisterEnum("feed.TransactionCategory_Category", TransactionCategory_Category_name, TransactionCategory_Category_value)
	proto.RegisterEnum("feed.OperatingSystem_Os", OperatingSystem_Os_name, OperatingSystem_Os_value)
	proto.RegisterEnum("feed.Platform_Type", Platform_Type_name, Platform_Type_value)
	proto.RegisterEnum("feed.DeviceType_Type", DeviceType_Type_name, DeviceType_Type_value)
	proto.RegisterEnum("feed.Browser_Type", Browser_Type_name, Browser_Type_value)
	proto.RegisterEnum("feed.BalanceType_Type", BalanceType_Type_name, BalanceType_Type_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProtoServiceClient is the client API for ProtoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProtoServiceClient interface {
	OneToOne(ctx context.Context, in *Request, opts ...grpc.CallOption) (*empty.Empty, error)
	OneToMany(ctx context.Context, in *Request, opts ...grpc.CallOption) (ProtoService_OneToManyClient, error)
	ManyToOne(ctx context.Context, opts ...grpc.CallOption) (ProtoService_ManyToOneClient, error)
	ManyToMany(ctx context.Context, opts ...grpc.CallOption) (ProtoService_ManyToManyClient, error)
}

type protoServiceClient struct {
	cc *grpc.ClientConn
}

func NewProtoServiceClient(cc *grpc.ClientConn) ProtoServiceClient {
	return &protoServiceClient{cc}
}

func (c *protoServiceClient) OneToOne(ctx context.Context, in *Request, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/feed.ProtoService/OneToOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoServiceClient) OneToMany(ctx context.Context, in *Request, opts ...grpc.CallOption) (ProtoService_OneToManyClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ProtoService_serviceDesc.Streams[0], "/feed.ProtoService/OneToMany", opts...)
	if err != nil {
		return nil, err
	}
	x := &protoServiceOneToManyClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ProtoService_OneToManyClient interface {
	Recv() (*empty.Empty, error)
	grpc.ClientStream
}

type protoServiceOneToManyClient struct {
	grpc.ClientStream
}

func (x *protoServiceOneToManyClient) Recv() (*empty.Empty, error) {
	m := new(empty.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *protoServiceClient) ManyToOne(ctx context.Context, opts ...grpc.CallOption) (ProtoService_ManyToOneClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ProtoService_serviceDesc.Streams[1], "/feed.ProtoService/ManyToOne", opts...)
	if err != nil {
		return nil, err
	}
	x := &protoServiceManyToOneClient{stream}
	return x, nil
}

type ProtoService_ManyToOneClient interface {
	Send(*Request) error
	CloseAndRecv() (*empty.Empty, error)
	grpc.ClientStream
}

type protoServiceManyToOneClient struct {
	grpc.ClientStream
}

func (x *protoServiceManyToOneClient) Send(m *Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *protoServiceManyToOneClient) CloseAndRecv() (*empty.Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(empty.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *protoServiceClient) ManyToMany(ctx context.Context, opts ...grpc.CallOption) (ProtoService_ManyToManyClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ProtoService_serviceDesc.Streams[2], "/feed.ProtoService/ManyToMany", opts...)
	if err != nil {
		return nil, err
	}
	x := &protoServiceManyToManyClient{stream}
	return x, nil
}

type ProtoService_ManyToManyClient interface {
	Send(*Request) error
	Recv() (*empty.Empty, error)
	grpc.ClientStream
}

type protoServiceManyToManyClient struct {
	grpc.ClientStream
}

func (x *protoServiceManyToManyClient) Send(m *Request) error {
	return x.ClientStream.SendMsg(m)
}

func (x *protoServiceManyToManyClient) Recv() (*empty.Empty, error) {
	m := new(empty.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ProtoServiceServer is the server API for ProtoService service.
type ProtoServiceServer interface {
	OneToOne(context.Context, *Request) (*empty.Empty, error)
	OneToMany(*Request, ProtoService_OneToManyServer) error
	ManyToOne(ProtoService_ManyToOneServer) error
	ManyToMany(ProtoService_ManyToManyServer) error
}

func RegisterProtoServiceServer(s *grpc.Server, srv ProtoServiceServer) {
	s.RegisterService(&_ProtoService_serviceDesc, srv)
}

func _ProtoService_OneToOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoServiceServer).OneToOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feed.ProtoService/OneToOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoServiceServer).OneToOne(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoService_OneToMany_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ProtoServiceServer).OneToMany(m, &protoServiceOneToManyServer{stream})
}

type ProtoService_OneToManyServer interface {
	Send(*empty.Empty) error
	grpc.ServerStream
}

type protoServiceOneToManyServer struct {
	grpc.ServerStream
}

func (x *protoServiceOneToManyServer) Send(m *empty.Empty) error {
	return x.ServerStream.SendMsg(m)
}

func _ProtoService_ManyToOne_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProtoServiceServer).ManyToOne(&protoServiceManyToOneServer{stream})
}

type ProtoService_ManyToOneServer interface {
	SendAndClose(*empty.Empty) error
	Recv() (*Request, error)
	grpc.ServerStream
}

type protoServiceManyToOneServer struct {
	grpc.ServerStream
}

func (x *protoServiceManyToOneServer) SendAndClose(m *empty.Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *protoServiceManyToOneServer) Recv() (*Request, error) {
	m := new(Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ProtoService_ManyToMany_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProtoServiceServer).ManyToMany(&protoServiceManyToManyServer{stream})
}

type ProtoService_ManyToManyServer interface {
	Send(*empty.Empty) error
	Recv() (*Request, error)
	grpc.ServerStream
}

type protoServiceManyToManyServer struct {
	grpc.ServerStream
}

func (x *protoServiceManyToManyServer) Send(m *empty.Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *protoServiceManyToManyServer) Recv() (*Request, error) {
	m := new(Request)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ProtoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "feed.ProtoService",
	HandlerType: (*ProtoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "OneToOne",
			Handler:    _ProtoService_OneToOne_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "OneToMany",
			Handler:       _ProtoService_OneToMany_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ManyToOne",
			Handler:       _ProtoService_ManyToOne_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "ManyToMany",
			Handler:       _ProtoService_ManyToMany_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "tx.proto",
}

func init() { proto.RegisterFile("tx.proto", fileDescriptor_tx_217d9914314969a7) }

var fileDescriptor_tx_217d9914314969a7 = []byte{
	// 1530 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0xdd, 0x72, 0xdb, 0xba,
	0x11, 0x3e, 0xd4, 0x8f, 0x25, 0xad, 0x7e, 0x8c, 0xc0, 0x63, 0x1f, 0xd6, 0xe9, 0x69, 0x14, 0xa6,
	0x4e, 0xd5, 0xd3, 0x8c, 0x92, 0xb1, 0x93, 0xb4, 0x6e, 0x9b, 0x1f, 0x4a, 0xa2, 0x63, 0x36, 0x92,
	0xe8, 0x90, 0x94, 0x1d, 0x5f, 0xb1, 0x14, 0x09, 0x2b, 0x9c, 0x91, 0x48, 0x86, 0x84, 0x13, 0xeb,
	0x85, 0xfa, 0x22, 0x9d, 0x3e, 0x40, 0xaf, 0xfb, 0x0e, 0x7d, 0x86, 0x0e, 0x00, 0x52, 0x56, 0x62,
	0x77, 0x72, 0x72, 0x63, 0x2f, 0xbf, 0xfd, 0xf6, 0x5b, 0x60, 0xb1, 0x0b, 0x08, 0xaa, 0xf4, 0xaa,
	0x1b, 0x27, 0x11, 0x8d, 0x70, 0xe9, 0x82, 0x10, 0x7f, 0xf7, 0xde, 0x2c, 0x8a, 0x66, 0x73, 0xf2,
	0x98, 0x63, 0xd3, 0xcb, 0x8b, 0xc7, 0x34, 0x58, 0x90, 0x94, 0xba, 0x8b, 0x58, 0xd0, 0x76, 0xef,
	0x7e, 0x4d, 0x20, 0x8b, 0x98, 0x2e, 0x85, 0x53, 0x39, 0x84, 0x8a, 0x49, 0x3e, 0x5e, 0x92, 0x94,
	0x62, 0x0c, 0xa5, 0xd8, 0xa5, 0x1f, 0x64, 0xa9, 0x5d, 0xec, 0xd4, 0x4c, 0x6e, 0xe3, 0x5d, 0xa8,
	0xe6, 0x61, 0x72, 0xa1, 0x2d, 0x75, 0x1a, 0xe6, 0xea, 0x5b, 0x79, 0x01, 0x9b, 0x76, 0xe2, 0x86,
	0xa9, 0xeb, 0xd1, 0x20, 0x0a, 0xed, 0x65, 0x4c, 0x94, 0x9f, 0xa1, 0xc4, 0xfe, 0xe3, 0x3a, 0x54,
	0x26, 0xe3, 0xb7, 0x63, 0xe3, 0x6c, 0x8c, 0x7e, 0xc0, 0x00, 0x1b, 0x7d, 0x53, 0x1b, 0xe8, 0x36,
	0x92, 0x70, 0x0d, 0xca, 0x03, 0xad, 0xa7, 0xdb, 0xa8, 0xa0, 0xfc, 0x47, 0x82, 0xad, 0xb5, 0xf8,
	0xbe, 0x4b, 0xc9, 0x2c, 0x4a, 0x96, 0xca, 0x3f, 0x25, 0xa8, 0xe6, 0x1f, 0x5f, 0x0a, 0xd5, 0xa0,
	0x7c, 0xa6, 0xbe, 0xd1, 0x4c, 0x24, 0x31, 0xcd, 0x13, 0xf5, 0xdc, 0x98, 0xd8, 0xa8, 0xc0, 0x6c,
	0x53, 0x3b, 0x9a, 0x8c, 0x07, 0xa8, 0xc8, 0xf8, 0x43, 0xe3, 0x5c, 0x1d, 0xda, 0xe7, 0xa8, 0x84,
	0x5b, 0x00, 0x7d, 0x63, 0x34, 0xd2, 0x2d, 0x4b, 0x37, 0xc6, 0xa8, 0x8c, 0x1b, 0x50, 0xb5, 0x4d,
	0x75, 0x6c, 0x1d, 0x69, 0x26, 0xda, 0x60, 0x5e, 0x4b, 0xb3, 0xed, 0xa1, 0x36, 0xd2, 0xc6, 0x36,
	0xaa, 0xb0, 0xd0, 0x81, 0x76, 0x62, 0x58, 0xba, 0x8d, 0xaa, 0xcc, 0x79, 0xa6, 0xdb, 0xc7, 0x03,
	0x53, 0x3d, 0x53, 0x87, 0xa8, 0xc6, 0xbe, 0xd5, 0xc1, 0xdf, 0x26, 0x96, 0xcd, 0xc9, 0x80, 0x2b,
	0x50, 0xec, 0x4d, 0xce, 0x51, 0x1d, 0x57, 0xa1, 0x64, 0x69, 0xc3, 0x21, 0x6a, 0x30, 0x75, 0x6d,
	0x3c, 0x30, 0x0d, 0xb6, 0x90, 0xa6, 0xf2, 0x77, 0xd8, 0x34, 0x62, 0x92, 0xb8, 0x34, 0x08, 0x67,
	0xd6, 0x32, 0xa5, 0x64, 0xa1, 0x8c, 0xa0, 0x60, 0xa4, 0x5f, 0xee, 0xa8, 0x02, 0xc5, 0x33, 0x7d,
	0x8c, 0x24, 0x66, 0xe8, 0x86, 0x85, 0x0a, 0xcc, 0xad, 0x32, 0x15, 0x9d, 0xed, 0xa6, 0x06, 0xe5,
	0xa1, 0x3e, 0x9e, 0xbc, 0x47, 0x25, 0x46, 0x30, 0xac, 0xf7, 0xa8, 0xcc, 0x33, 0x5b, 0x03, 0xb4,
	0xa1, 0xa8, 0x50, 0x3d, 0x99, 0xbb, 0xf4, 0x22, 0x4a, 0x16, 0xca, 0xb3, 0xdb, 0xea, 0x5e, 0x83,
	0xf2, 0xb1, 0x3d, 0x1a, 0x3e, 0x13, 0x65, 0x3f, 0x1a, 0xaa, 0xd6, 0xb1, 0xa8, 0xd6, 0x58, 0xb5,
	0xf5, 0x53, 0x0d, 0x15, 0x95, 0x31, 0xc0, 0x80, 0x7c, 0x0a, 0x3c, 0xc2, 0x0f, 0xef, 0xf5, 0xff,
	0x39, 0xbc, 0x91, 0xd1, 0xd3, 0x87, 0x9a, 0x28, 0xba, 0xad, 0xf6, 0x86, 0x9a, 0x2d, 0xd6, 0x39,
	0xd0, 0xac, 0xb7, 0xb6, 0x71, 0x82, 0x8a, 0x78, 0x03, 0x0a, 0xf6, 0x29, 0x2a, 0x29, 0xff, 0x96,
	0xa0, 0xd2, 0x4b, 0xa2, 0xcf, 0x29, 0x49, 0x94, 0x7f, 0x49, 0xb7, 0xc9, 0xd5, 0xa1, 0x72, 0xa4,
	0x9b, 0xda, 0x91, 0xf1, 0x5e, 0xe8, 0xf5, 0x8f, 0x4d, 0x63, 0xa4, 0xa1, 0x02, 0xbe, 0x03, 0x4d,
	0x61, 0x3b, 0x59, 0xba, 0x22, 0x73, 0x5b, 0xea, 0x91, 0x6a, 0xea, 0xa8, 0xc4, 0xdc, 0xc2, 0xce,
	0xdd, 0x65, 0x96, 0x54, 0xd7, 0xd0, 0x06, 0x3b, 0x01, 0x6d, 0xf0, 0x46, 0x43, 0x15, 0x8c, 0xa1,
	0x95, 0xd5, 0xce, 0xc9, 0xb6, 0xc8, 0x0f, 0xf2, 0xdd, 0x3b, 0xa7, 0x67, 0x1a, 0x67, 0x96, 0x66,
	0xa2, 0x1a, 0x63, 0x8f, 0x8d, 0xb1, 0x86, 0x00, 0x6f, 0xc3, 0x9d, 0x6b, 0x4f, 0x2e, 0x5b, 0x67,
	0x01, 0x93, 0xfe, 0x2a, 0xa0, 0xa1, 0x1c, 0x43, 0xbd, 0xe7, 0xce, 0xdd, 0x30, 0x2b, 0xd2, 0xe1,
	0x6d, 0xbb, 0xc2, 0xd0, 0x12, 0x1d, 0xee, 0xf4, 0xd4, 0xa1, 0x3a, 0xee, 0xb3, 0x62, 0x21, 0x68,
	0xf4, 0x55, 0xeb, 0x78, 0x85, 0x14, 0x94, 0x01, 0x94, 0x47, 0x51, 0x48, 0x96, 0xf8, 0x01, 0x34,
	0xbd, 0xcb, 0x24, 0x21, 0xa1, 0xb7, 0x74, 0x2e, 0xc3, 0x80, 0xca, 0x52, 0x5b, 0xea, 0xd4, 0xcc,
	0x46, 0x0e, 0x4e, 0xc2, 0x80, 0xe2, 0x1d, 0xd8, 0x70, 0x17, 0xd1, 0x65, 0x48, 0xf9, 0xdc, 0x15,
	0xcd, 0xec, 0x4b, 0xf9, 0x47, 0x0b, 0xea, 0x6b, 0x63, 0x83, 0x5b, 0x50, 0x08, 0x7c, 0xae, 0x50,
	0x34, 0x0b, 0x81, 0x8f, 0x7f, 0x02, 0xf0, 0x12, 0xe2, 0x52, 0xe2, 0x3b, 0xd3, 0xa5, 0x5c, 0xe2,
	0x78, 0x2d, 0x43, 0x7a, 0x4b, 0xfc, 0x14, 0x2a, 0xd9, 0x87, 0x5c, 0x6e, 0x4b, 0x9d, 0xfa, 0xfe,
	0x6e, 0x57, 0x5c, 0x0f, 0xdd, 0x7c, 0xae, 0xbb, 0x76, 0x7e, 0x7f, 0x98, 0x39, 0x15, 0x6f, 0x41,
	0x99, 0x5e, 0x39, 0x81, 0x2f, 0x57, 0xf9, 0x4a, 0x4b, 0xf4, 0x4a, 0xf7, 0xf1, 0x1e, 0xb4, 0xdc,
	0x38, 0x9e, 0x07, 0x9e, 0xcb, 0x16, 0xc2, 0xbc, 0x35, 0x9e, 0xad, 0xb9, 0x86, 0xea, 0x3e, 0xde,
	0x87, 0xed, 0xd8, 0x4d, 0x48, 0x48, 0x1d, 0x7a, 0xbd, 0x6c, 0xc6, 0xde, 0xe6, 0xec, 0x2d, 0xe1,
	0x5c, 0xdb, 0x92, 0xce, 0x37, 0xe1, 0x7a, 0x1e, 0xdb, 0x2f, 0x23, 0xee, 0x88, 0x4d, 0x64, 0x88,
	0x70, 0x7b, 0xd1, 0x22, 0x76, 0xc3, 0x25, 0x73, 0xff, 0x98, 0xed, 0x51, 0x20, 0xba, 0x8f, 0xef,
	0x42, 0xed, 0xb3, 0x3b, 0x9f, 0x13, 0x1e, 0x2c, 0x73, 0x6f, 0x55, 0x00, 0xba, 0x8f, 0xef, 0x41,
	0x3d, 0x73, 0x7a, 0x91, 0x4f, 0xe4, 0x5f, 0xf1, 0x0d, 0x81, 0x80, 0xfa, 0x91, 0x4f, 0xf0, 0x4b,
	0xa8, 0x7a, 0xd9, 0xf5, 0x23, 0xef, 0xb6, 0xa5, 0x4e, 0x6b, 0x5f, 0xe9, 0xb2, 0x8b, 0xb6, 0x7b,
	0xcb, 0x65, 0xd5, 0xcd, 0x0d, 0x73, 0x15, 0x83, 0xef, 0x43, 0x23, 0xbd, 0x9c, 0x3a, 0x2b, 0x8d,
	0xbb, 0x3c, 0x43, 0x3d, 0xbd, 0x9c, 0xae, 0x6e, 0xb5, 0x43, 0x68, 0x4c, 0x45, 0x4f, 0x39, 0x74,
	0x19, 0x13, 0xf9, 0xd7, 0x3c, 0xcd, 0x8e, 0x48, 0xb3, 0xd6, 0x6d, 0x5d, 0xf6, 0xc7, 0xac, 0x4f,
	0xaf, 0x11, 0xdc, 0x85, 0x12, 0x0f, 0xf9, 0x89, 0x87, 0xec, 0xde, 0x58, 0xd9, 0x75, 0x18, 0xe7,
	0xdd, 0xec, 0xb5, 0xdf, 0xdc, 0xd2, 0x6b, 0x0f, 0x56, 0xbd, 0x76, 0x8f, 0xf7, 0x44, 0x5d, 0xc8,
	0xf2, 0x6e, 0xcd, 0x1b, 0x0f, 0x3f, 0x82, 0x7a, 0x1c, 0x45, 0x73, 0x27, 0x63, 0xb6, 0x6f, 0x32,
	0x81, 0xf9, 0x55, 0xc1, 0xd6, 0x00, 0xad, 0x1f, 0x37, 0x7b, 0x93, 0xe4, 0xfb, 0xdf, 0x6c, 0xb8,
	0xcd, 0xb5, 0x18, 0x86, 0xb2, 0xa3, 0x5c, 0x10, 0xea, 0x3a, 0xbe, 0x4b, 0x5d, 0x59, 0xe1, 0x4b,
	0xaf, 0x32, 0x60, 0xe0, 0x52, 0x97, 0x55, 0x9a, 0x5c, 0x51, 0x92, 0x84, 0xee, 0xdc, 0x49, 0xc8,
	0x85, 0xfc, 0x40, 0x54, 0x3a, 0xc7, 0x4c, 0x72, 0x81, 0xf7, 0xa0, 0x92, 0x55, 0x4f, 0xfe, 0xed,
	0xcd, 0x05, 0xe7, 0x3e, 0x2c, 0x43, 0x25, 0x25, 0x69, 0x1a, 0x44, 0xa1, 0xbc, 0xc7, 0x45, 0xf2,
	0x4f, 0x3e, 0x5e, 0xb1, 0xfc, 0x90, 0x83, 0x85, 0x20, 0x5e, 0x3d, 0x92, 0xbf, 0x13, 0x83, 0xc0,
	0x1f, 0x49, 0x0c, 0x25, 0x4a, 0x52, 0x2a, 0x77, 0xda, 0x52, 0xa7, 0x6a, 0x72, 0x1b, 0x1f, 0xc0,
	0x0e, 0xb9, 0xf2, 0x3e, 0xb8, 0xe1, 0x8c, 0x38, 0x89, 0x4b, 0x89, 0x33, 0x75, 0xa9, 0xf7, 0x81,
	0x35, 0xe4, 0xef, 0x45, 0xdb, 0xe7, 0x5e, 0xd3, 0xa5, 0xa4, 0xc7, 0x7c, 0xba, 0x8f, 0x3b, 0x80,
	0xe6, 0xd1, 0x2c, 0x08, 0x1d, 0x2f, 0x0a, 0x29, 0xb9, 0xe2, 0xfd, 0xfb, 0x33, 0xa7, 0xb7, 0x38,
	0xde, 0x17, 0xb0, 0xe8, 0x62, 0xcf, 0x5d, 0xc4, 0x6e, 0x30, 0xe3, 0xa3, 0xf4, 0x07, 0x4e, 0x82,
	0x1c, 0x12, 0x23, 0x92, 0x90, 0x38, 0x4a, 0x98, 0x46, 0x2a, 0xef, 0xb7, 0x8b, 0x6c, 0x44, 0x04,
	0xa2, 0xfb, 0x29, 0x7e, 0x08, 0x9b, 0xf9, 0x80, 0xa5, 0xe4, 0x23, 0xe7, 0x1c, 0x70, 0x4e, 0x33,
	0x83, 0x2d, 0xf2, 0x91, 0xf1, 0x7e, 0x84, 0x4a, 0x40, 0xc9, 0x82, 0xe5, 0x78, 0x2a, 0xae, 0x21,
	0xf6, 0x29, 0x66, 0xec, 0x13, 0x09, 0xfd, 0x28, 0x61, 0xae, 0x67, 0x62, 0xc6, 0x04, 0xa0, 0xfb,
	0xf8, 0x39, 0xd4, 0x7d, 0xfe, 0xae, 0x88, 0xf6, 0x7e, 0xce, 0x7b, 0x75, 0x5b, 0x54, 0xfe, 0xfa,
	0xc1, 0x11, 0x6d, 0x0a, 0xfe, 0x0a, 0xc0, 0x5d, 0xd8, 0x5a, 0x8b, 0x73, 0x3e, 0x91, 0x84, 0x1f,
	0xc9, 0x1f, 0x79, 0xad, 0xef, 0x5c, 0x13, 0x4f, 0x85, 0x03, 0x77, 0xa0, 0x10, 0xa5, 0xf2, 0x9f,
	0xb8, 0xbc, 0x2c, 0xe4, 0xbf, 0x7a, 0x74, 0xbb, 0x46, 0x6a, 0x16, 0xa2, 0x94, 0x95, 0x23, 0x4a,
	0x57, 0x82, 0x87, 0x5c, 0xb0, 0x16, 0xa5, 0xb9, 0xd0, 0x63, 0xa8, 0xc6, 0xd9, 0x5b, 0x2a, 0xff,
	0x99, 0xcb, 0x6d, 0x09, 0xb9, 0xfc, 0x85, 0x15, 0x6b, 0x5d, 0x91, 0x58, 0xeb, 0xe5, 0x36, 0x53,
	0x95, 0xff, 0x22, 0x5a, 0x2f, 0xc7, 0x4e, 0x49, 0x82, 0x1f, 0x41, 0x65, 0x2a, 0xde, 0x42, 0xf9,
	0xaf, 0x5c, 0x12, 0x67, 0xf3, 0x2d, 0x40, 0xa1, 0x98, 0x53, 0xd8, 0x81, 0x66, 0x26, 0xd7, 0x7b,
	0xd1, 0x96, 0x3a, 0x65, 0x13, 0x32, 0x88, 0xc9, 0xdd, 0x87, 0x06, 0x3f, 0x98, 0x64, 0x29, 0x2e,
	0xae, 0x97, 0x22, 0x63, 0x86, 0xf1, 0x9b, 0xeb, 0x21, 0x6c, 0xe6, 0x94, 0x20, 0x16, 0xac, 0x57,
	0x9c, 0xd5, 0xcc, 0x60, 0x3d, 0xe6, 0xbc, 0x3d, 0x68, 0xc5, 0x49, 0xb4, 0x88, 0xf8, 0x64, 0x72,
	0xda, 0x6b, 0x41, 0x5b, 0xa1, 0x9c, 0xf6, 0x0a, 0x9a, 0x09, 0xf1, 0x83, 0x84, 0x78, 0x54, 0xcc,
	0xaf, 0xfa, 0xcd, 0xf9, 0x6d, 0xe4, 0x01, 0x7c, 0x78, 0x0f, 0x01, 0x44, 0x3b, 0xf3, 0xe8, 0xde,
	0x37, 0xa3, 0x6b, 0x9c, 0x9d, 0xcf, 0x7d, 0x42, 0x66, 0xd9, 0x43, 0xd1, 0x17, 0x73, 0x2f, 0x00,
	0xdd, 0x67, 0xf3, 0xe6, 0x05, 0x74, 0x29, 0x0f, 0xc4, 0x0c, 0x32, 0x1b, 0x23, 0x28, 0x06, 0x69,
	0x2c, 0x6b, 0x1c, 0x62, 0xe6, 0xfe, 0x7f, 0x25, 0x68, 0x9c, 0xb0, 0x24, 0x16, 0x49, 0x58, 0xe3,
	0xe0, 0x03, 0xa8, 0x1a, 0x21, 0xb1, 0x23, 0x23, 0x24, 0xb8, 0x29, 0xce, 0x22, 0xfb, 0xe9, 0xbb,
	0xbb, 0x73, 0x63, 0x55, 0x1a, 0xfb, 0x8d, 0xac, 0xfc, 0x80, 0x9f, 0x43, 0x8d, 0x07, 0x8d, 0xdc,
	0x70, 0xf9, 0x8b, 0xa3, 0x9e, 0x48, 0x2c, 0x8e, 0x85, 0x7c, 0x5f, 0xb6, 0x8e, 0xc4, 0x6a, 0x26,
	0xe2, 0xbe, 0x2b, 0x61, 0x47, 0x7a, 0x22, 0x4d, 0x37, 0x38, 0x7a, 0xf0, 0xbf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x8c, 0xea, 0x46, 0x91, 0x21, 0x0c, 0x00, 0x00,
}
